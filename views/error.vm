##
## Velocity Template for error end-state
##
## Velocity context will contain the following variables during controlled errors.
## Some error paths involve runtime exceptions handled outside Spring Web Flow by the
## MVC layer and will not generally populate most of these variables.
##
## flowRequestContext - the Spring Web Flow RequestContext
## profileRequestContext - root of context tree
## encoder - HTMLEncoder class
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## custom - arbitrary object injected by deployer
##
#set ($title = $springMacroRequestContext.getMessage("idp.title", "Web Login Service"))
#set ($defaultTitleSuffix = $springMacroRequestContext.getMessage("idp.title.suffix", "Error"))
##
#if ($flowRequestContext)
	## This handles flow events, the most common case.
    #set ($eventId = $flowRequestContext.getCurrentEvent().getId())
    #set ($eventKey = $springMacroRequestContext.getMessage("$eventId", "error"))
    #set ($titleSuffix = $springMacroRequestContext.getMessage("${eventKey}.title", "$defaultTitleSuffix"))
    #set ($message = $springMacroRequestContext.getMessage("${eventKey}.message", "$defaultTitleSuffix: $eventId"))
    #if ($eventId == "AccessDenied" or $eventId == "ContextCheckDenied")
        $response.setStatus(403)
    #elseif ($eventId == "AttributeReleaseRejected" || $eventId == "TermsRejected")
        $response.setStatus(200)
    #elseif ($eventKey == "unexpected" || $eventKey == "runtime-error" || $eventKey == "error")
        $response.setStatus(500)
    #else
        $response.setStatus(400)
    #end
#elseif ($exception)
	## This handles exceptions that reach the Spring-MVC exception handler.
    #set ($eventId = $exception.getClass().getSimpleName())
    #set ($eventKey = $springMacroRequestContext.getMessage("$eventId", "error"))
    #set ($titleSuffix = $springMacroRequestContext.getMessage("${eventKey}.title", "$defaultTitleSuffix"))
    #set ($message = $springMacroRequestContext.getMessage("${eventKey}.message", "$defaultTitleSuffix: $eventId"))
    $response.setStatus(500)
#else
	## This is a catch-all that theoretically shouldn't happen?
    #set ($titleSuffix = $defaultTitleSuffix)
    #set ($message = $springMacroRequestContext.getMessage("idp.message", "An unidentified error occurred."))
    $response.setStatus(500)
#end
##

#parse ("header.vm")

<main class="d-flex flex-md-row flex-column container-fluid justify-content-center" style="margin-top: 64px" id="content">

    <div class="d-flex flex-column col-lg-7 mt-5">
        <section class="alert alert-error">
            <h1>$title - $titleSuffix</h1>
            <p>#evaluate($message)</p>
        </section>
    </div>
    
</main>

#parse ("footer.vm")